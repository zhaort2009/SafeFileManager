/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package cn.pedant.SweetAlert.sample;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_slide_in_bottom=0x7f010002;
    public static final int abc_slide_in_top=0x7f010003;
    public static final int abc_slide_out_bottom=0x7f010004;
    public static final int abc_slide_out_top=0x7f010005;
    public static final int error_frame_in=0x7f010006;
    public static final int error_x_in=0x7f010007;
    public static final int modal_in=0x7f010008;
    public static final int modal_out=0x7f010009;
    public static final int success_bow_roate=0x7f01000a;
    public static final int success_mask_layout=0x7f01000b;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f020000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f020001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f020002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f020003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f020004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f020005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f020006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f020007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f020008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f020009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f02000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f02000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f02000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f02000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f02000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f02000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f020010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f020011;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f020012;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f020013;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f020014;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f020015;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f020016;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f020017;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f020018;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f020019;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f02001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f02001b;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f02001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f02001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f02001e;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f02001f;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f020020;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f020021;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f020022;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f020023;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f020024;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int barColor=0x7f020025;
    /**
     * The size of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barSize=0x7f020026;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int barSpinCycleTime=0x7f020027;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barWidth=0x7f020028;
    /**
     * A style that may be applied to Buttons placed within a
     * LinearLayout with the style buttonBarStyle to form a button bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f020029;
    /**
     * A style that may be applied to horizontal LinearLayouts
     * to form a button bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f02002a;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f02002b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int circleRadius=0x7f02002c;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f02002d;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f02002e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f02002f;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f020030;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f020031;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f020032;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f020033;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f020034;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f020035;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f020036;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f020037;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f020038;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f020039;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f02003a;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f02003b;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f02003c;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f02003d;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f02003e;
    /**
     * Whether this spinner should mark child views as enabled/disabled when
     * the spinner itself is enabled/disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableChildrenWhenDisabled=0x7f02003f;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f020040;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f020041;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f020042;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f020043;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f020044;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f020045;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f020046;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f020047;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f020048;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f020049;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f02004a;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f02004b;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f02004c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fillRadius=0x7f02004d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int fromDeg=0x7f02004e;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f02004f;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f020050;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f020051;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f020052;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f020053;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f020054;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f020055;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f020056;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f020057;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f020058;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f020059;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f02005a;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f02005b;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f02005c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f02005d;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f02005e;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f02005f;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f020060;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f020061;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f020062;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f020063;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f020064;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f020065;
    /**
     * The size of the middle bar when top and bottom bars merge into middle bar to form an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int middleBarArrowSize=0x7f020066;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f020067;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f020068;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f020069;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f02006a;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f02006b;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f02006c;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f02006d;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f02006e;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f02006f;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int pivotX=0x7f020070;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int pivotY=0x7f020071;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f020072;
    /**
     * Reference to a layout to use for displaying a prompt in the dropdown for
     * spinnerMode="dropdown". This layout must contain a TextView with the id
     * {@code @android:id/text1} to be populated with the prompt text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupPromptView=0x7f020073;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f020074;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f020075;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f020076;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f020077;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f020078;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int progressIndeterminate=0x7f020079;
    /**
     * The prompt to display when the spinner's dialog is shown.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int prompt=0x7f02007a;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f02007b;
    /**
     * An optional query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f02007c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rimColor=0x7f02007d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rimWidth=0x7f02007e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>x</td><td>0</td><td></td></tr>
     * <tr><td>y</td><td>1</td><td></td></tr>
     * <tr><td>z</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int rollType=0x7f02007f;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f020080;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f020081;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f020082;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f020083;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f020084;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f020085;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f020086;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f020087;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int spinSpeed=0x7f020088;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f020089;
    /**
     * Display mode for spinner options.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dialog</td><td>0</td><td>Spinner options will be presented to the user as a dialog window.</td></tr>
     * <tr><td>dropdown</td><td>1</td><td>Spinner options will be presented to the user as an inline dropdown
     * anchored to the spinner widget itself.</td></tr>
     * </table>
     */
    public static final int spinnerMode=0x7f02008a;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f02008b;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f02008c;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f02008d;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f02008e;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f02008f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f020090;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f020091;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f020092;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f020093;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f020094;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f020095;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f020096;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f020097;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f020098;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f020099;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f02009a;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f02009b;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f02009c;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f02009d;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f02009e;
    /**
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource. During XML inflation, any child views under the
     * view with a theme override will inherit the themed context.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f02009f;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f0200a0;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f0200a1;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f0200a2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f0200a3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f0200a4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f0200a5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f0200a6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargins=0x7f0200a7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f0200a8;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f0200a9;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int toDeg=0x7f0200aa;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f0200ab;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f0200ac;
    /**
     * The size of the top and bottom bars when they merge to the middle bar to form an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int topBottomBarArrowSize=0x7f0200ad;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f0200ae;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f0200af;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f0200b0;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f0200b1;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f0200b2;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f0200b3;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f0200b4;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f0200b5;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f0200b6;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f030000;
    public static final int abc_action_bar_embed_tabs_pre_jb=0x7f030001;
    public static final int abc_action_bar_expanded_action_views_exclusive=0x7f030002;
    public static final int abc_config_actionMenuItemAllCaps=0x7f030003;
    public static final int abc_config_allowActionMenuItemTextWithIcon=0x7f030004;
    public static final int abc_config_showMenuShortcutsWhenKeyboardPresent=0x7f030005;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f040000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f040001;
    public static final int abc_input_method_navigation_guard=0x7f040002;
    public static final int abc_primary_text_disable_only_material_dark=0x7f040003;
    public static final int abc_primary_text_disable_only_material_light=0x7f040004;
    public static final int abc_primary_text_material_dark=0x7f040005;
    public static final int abc_primary_text_material_light=0x7f040006;
    public static final int abc_search_url_text=0x7f040007;
    public static final int abc_search_url_text_normal=0x7f040008;
    public static final int abc_search_url_text_pressed=0x7f040009;
    public static final int abc_search_url_text_selected=0x7f04000a;
    public static final int abc_secondary_text_material_dark=0x7f04000b;
    public static final int abc_secondary_text_material_light=0x7f04000c;
    public static final int accent_material_dark=0x7f04000d;
    public static final int accent_material_light=0x7f04000e;
    public static final int background_floating_material_dark=0x7f04000f;
    public static final int background_floating_material_light=0x7f040010;
    public static final int background_material_dark=0x7f040011;
    public static final int background_material_light=0x7f040012;
    public static final int blue_btn_bg_color=0x7f040013;
    public static final int blue_btn_bg_pressed_color=0x7f040014;
    public static final int bright_foreground_disabled_material_dark=0x7f040015;
    public static final int bright_foreground_disabled_material_light=0x7f040016;
    public static final int bright_foreground_inverse_material_dark=0x7f040017;
    public static final int bright_foreground_inverse_material_light=0x7f040018;
    public static final int bright_foreground_material_dark=0x7f040019;
    public static final int bright_foreground_material_light=0x7f04001a;
    public static final int button_material_dark=0x7f04001b;
    public static final int button_material_light=0x7f04001c;
    public static final int button_text_color=0x7f04001d;
    public static final int dim_foreground_disabled_material_dark=0x7f04001e;
    public static final int dim_foreground_disabled_material_light=0x7f04001f;
    public static final int dim_foreground_material_dark=0x7f040020;
    public static final int dim_foreground_material_light=0x7f040021;
    public static final int error_stroke_color=0x7f040022;
    public static final int float_transparent=0x7f040023;
    public static final int gray_btn_bg_color=0x7f040024;
    public static final int gray_btn_bg_pressed_color=0x7f040025;
    public static final int highlighted_text_material_dark=0x7f040026;
    public static final int highlighted_text_material_light=0x7f040027;
    public static final int hint_foreground_material_dark=0x7f040028;
    public static final int hint_foreground_material_light=0x7f040029;
    public static final int link_text_material_dark=0x7f04002a;
    public static final int link_text_material_light=0x7f04002b;
    public static final int material_blue_grey_80=0x7f04002c;
    public static final int material_blue_grey_800=0x7f04002d;
    public static final int material_blue_grey_90=0x7f04002e;
    public static final int material_blue_grey_900=0x7f04002f;
    public static final int material_blue_grey_95=0x7f040030;
    public static final int material_blue_grey_950=0x7f040031;
    public static final int material_deep_teal_20=0x7f040032;
    public static final int material_deep_teal_200=0x7f040033;
    public static final int material_deep_teal_50=0x7f040034;
    public static final int material_deep_teal_500=0x7f040035;
    public static final int primary_dark_material_dark=0x7f040036;
    public static final int primary_dark_material_light=0x7f040037;
    public static final int primary_material_dark=0x7f040038;
    public static final int primary_material_light=0x7f040039;
    public static final int primary_text_default_material_dark=0x7f04003a;
    public static final int primary_text_default_material_light=0x7f04003b;
    public static final int primary_text_disabled_material_dark=0x7f04003c;
    public static final int primary_text_disabled_material_light=0x7f04003d;
    public static final int red_btn_bg_color=0x7f04003e;
    public static final int red_btn_bg_pressed_color=0x7f04003f;
    public static final int ripple_material_dark=0x7f040040;
    public static final int ripple_material_light=0x7f040041;
    public static final int secondary_text_default_material_dark=0x7f040042;
    public static final int secondary_text_default_material_light=0x7f040043;
    public static final int secondary_text_disabled_material_dark=0x7f040044;
    public static final int secondary_text_disabled_material_light=0x7f040045;
    public static final int success_stroke_color=0x7f040046;
    public static final int sweet_dialog_bg_color=0x7f040047;
    public static final int switch_thumb_normal_material_dark=0x7f040048;
    public static final int switch_thumb_normal_material_light=0x7f040049;
    public static final int text_color=0x7f04004a;
    public static final int trans_success_stroke_color=0x7f04004b;
    public static final int warning_stroke_color=0x7f04004c;
  }
  public static final class dimen {
    public static final int abc_action_bar_default_height_material=0x7f050000;
    public static final int abc_action_bar_default_padding_material=0x7f050001;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f050002;
    public static final int abc_action_bar_progress_bar_size=0x7f050003;
    public static final int abc_action_bar_stacked_max_height=0x7f050004;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f050005;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f050006;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f050007;
    public static final int abc_action_button_min_height_material=0x7f050008;
    public static final int abc_action_button_min_width_material=0x7f050009;
    public static final int abc_action_button_min_width_overflow_material=0x7f05000a;
    public static final int abc_config_prefDialogWidth=0x7f05000b;
    public static final int abc_control_inset_material=0x7f05000c;
    public static final int abc_control_padding_material=0x7f05000d;
    public static final int abc_dropdownitem_icon_width=0x7f05000e;
    public static final int abc_dropdownitem_text_padding_left=0x7f05000f;
    public static final int abc_dropdownitem_text_padding_right=0x7f050010;
    public static final int abc_panel_menu_list_width=0x7f050011;
    public static final int abc_search_view_preferred_width=0x7f050012;
    public static final int abc_search_view_text_min_width=0x7f050013;
    public static final int abc_text_size_body_1_material=0x7f050014;
    public static final int abc_text_size_body_2_material=0x7f050015;
    public static final int abc_text_size_button_material=0x7f050016;
    public static final int abc_text_size_caption_material=0x7f050017;
    public static final int abc_text_size_display_1_material=0x7f050018;
    public static final int abc_text_size_display_2_material=0x7f050019;
    public static final int abc_text_size_display_3_material=0x7f05001a;
    public static final int abc_text_size_display_4_material=0x7f05001b;
    public static final int abc_text_size_headline_material=0x7f05001c;
    public static final int abc_text_size_large_material=0x7f05001d;
    public static final int abc_text_size_medium_material=0x7f05001e;
    public static final int abc_text_size_menu_material=0x7f05001f;
    public static final int abc_text_size_small_material=0x7f050020;
    public static final int abc_text_size_subhead_material=0x7f050021;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f050022;
    public static final int abc_text_size_title_material=0x7f050023;
    public static final int abc_text_size_title_material_toolbar=0x7f050024;
    public static final int alert_width=0x7f050025;
    public static final int common_circle_width=0x7f050026;
    public static final int dialog_fixed_height_major=0x7f050027;
    public static final int dialog_fixed_height_minor=0x7f050028;
    public static final int dialog_fixed_width_major=0x7f050029;
    public static final int dialog_fixed_width_minor=0x7f05002a;
    public static final int disabled_alpha_material_dark=0x7f05002b;
    public static final int disabled_alpha_material_light=0x7f05002c;
    public static final int progress_circle_radius=0x7f05002d;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_holo_dark=0x7f060000;
    public static final int abc_ab_share_pack_holo_light=0x7f060001;
    public static final int abc_btn_check_material=0x7f060002;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f060003;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f060004;
    public static final int abc_btn_radio_material=0x7f060005;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f060006;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f060007;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f060008;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f060009;
    public static final int abc_cab_background_internal_bg=0x7f06000a;
    public static final int abc_cab_background_top_material=0x7f06000b;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f06000c;
    public static final int abc_edit_text_material=0x7f06000d;
    public static final int abc_ic_ab_back_mtrl_am_alpha=0x7f06000e;
    public static final int abc_ic_clear_mtrl_alpha=0x7f06000f;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f060010;
    public static final int abc_ic_go_search_api_mtrl_alpha=0x7f060011;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f060012;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f060013;
    public static final int abc_ic_menu_moreoverflow_mtrl_alpha=0x7f060014;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f060015;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f060016;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f060017;
    public static final int abc_ic_search_api_mtrl_alpha=0x7f060018;
    public static final int abc_ic_voice_search_api_mtrl_alpha=0x7f060019;
    public static final int abc_item_background_holo_dark=0x7f06001a;
    public static final int abc_item_background_holo_light=0x7f06001b;
    public static final int abc_list_divider_mtrl_alpha=0x7f06001c;
    public static final int abc_list_focused_holo=0x7f06001d;
    public static final int abc_list_longpressed_holo=0x7f06001e;
    public static final int abc_list_pressed_holo_dark=0x7f06001f;
    public static final int abc_list_pressed_holo_light=0x7f060020;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f060021;
    public static final int abc_list_selector_background_transition_holo_light=0x7f060022;
    public static final int abc_list_selector_disabled_holo_dark=0x7f060023;
    public static final int abc_list_selector_disabled_holo_light=0x7f060024;
    public static final int abc_list_selector_holo_dark=0x7f060025;
    public static final int abc_list_selector_holo_light=0x7f060026;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f060027;
    public static final int abc_popup_background_mtrl_mult=0x7f060028;
    public static final int abc_spinner_mtrl_am_alpha=0x7f060029;
    public static final int abc_switch_thumb_material=0x7f06002a;
    public static final int abc_switch_track_mtrl_alpha=0x7f06002b;
    public static final int abc_tab_indicator_material=0x7f06002c;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f06002d;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f06002e;
    public static final int abc_textfield_default_mtrl_alpha=0x7f06002f;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f060030;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f060031;
    public static final int abc_textfield_search_material=0x7f060032;
    public static final int blue_button_background=0x7f060033;
    public static final int custom_img=0x7f060034;
    public static final int dialog_background=0x7f060035;
    public static final int error_center_x=0x7f060036;
    public static final int error_circle=0x7f060037;
    public static final int gray_button_background=0x7f060038;
    public static final int ic_launcher=0x7f060039;
    public static final int logo_big=0x7f06003a;
    public static final int red_button_background=0x7f06003b;
    public static final int success_bow=0x7f06003c;
    public static final int success_circle=0x7f06003d;
    public static final int warning_circle=0x7f06003e;
    public static final int warning_sigh=0x7f06003f;
  }
  public static final class id {
    public static final int action_bar=0x7f070000;
    public static final int action_bar_activity_content=0x7f070001;
    public static final int action_bar_container=0x7f070002;
    public static final int action_bar_root=0x7f070003;
    public static final int action_bar_spinner=0x7f070004;
    public static final int action_bar_subtitle=0x7f070005;
    public static final int action_bar_title=0x7f070006;
    public static final int action_context_bar=0x7f070007;
    public static final int action_menu_divider=0x7f070008;
    public static final int action_menu_presenter=0x7f070009;
    public static final int action_mode_bar=0x7f07000a;
    public static final int action_mode_bar_stub=0x7f07000b;
    public static final int action_mode_close_button=0x7f07000c;
    public static final int activity_chooser_view_content=0x7f07000d;
    public static final int always=0x7f07000e;
    public static final int basic_test=0x7f07000f;
    public static final int beginning=0x7f070010;
    public static final int bottom=0x7f070011;
    public static final int cancel_button=0x7f070012;
    public static final int checkbox=0x7f070013;
    public static final int collapseActionView=0x7f070014;
    public static final int confirm_button=0x7f070015;
    public static final int content_text=0x7f070016;
    public static final int custom_image=0x7f070017;
    public static final int custom_img_test=0x7f070018;
    public static final int decor_content_parent=0x7f070019;
    public static final int default_activity_button=0x7f07001a;
    public static final int dialog=0x7f07001b;
    public static final int disableHome=0x7f07001c;
    public static final int dropdown=0x7f07001d;
    public static final int edit_query=0x7f07001e;
    public static final int end=0x7f07001f;
    public static final int error_frame=0x7f070020;
    public static final int error_text_test=0x7f070021;
    public static final int error_x=0x7f070022;
    public static final int expand_activities_button=0x7f070023;
    public static final int expanded_menu=0x7f070024;
    public static final int home=0x7f070025;
    public static final int homeAsUp=0x7f070026;
    public static final int icon=0x7f070027;
    public static final int ifRoom=0x7f070028;
    public static final int image=0x7f070029;
    public static final int listMode=0x7f07002a;
    public static final int list_item=0x7f07002b;
    public static final int loading=0x7f07002c;
    public static final int logo_img=0x7f07002d;
    public static final int mask_left=0x7f07002e;
    public static final int mask_right=0x7f07002f;
    public static final int middle=0x7f070030;
    public static final int never=0x7f070031;
    public static final int none=0x7f070032;
    public static final int normal=0x7f070033;
    public static final int progressWheel=0x7f070034;
    public static final int progress_circular=0x7f070035;
    public static final int progress_dialog=0x7f070036;
    public static final int progress_horizontal=0x7f070037;
    public static final int radio=0x7f070038;
    public static final int search_badge=0x7f070039;
    public static final int search_bar=0x7f07003a;
    public static final int search_button=0x7f07003b;
    public static final int search_close_btn=0x7f07003c;
    public static final int search_edit_frame=0x7f07003d;
    public static final int search_go_btn=0x7f07003e;
    public static final int search_mag_icon=0x7f07003f;
    public static final int search_plate=0x7f070040;
    public static final int search_src_text=0x7f070041;
    public static final int search_voice_btn=0x7f070042;
    public static final int shortcut=0x7f070043;
    public static final int showCustom=0x7f070044;
    public static final int showHome=0x7f070045;
    public static final int showTitle=0x7f070046;
    public static final int split_action_bar=0x7f070047;
    public static final int submit_area=0x7f070048;
    public static final int success_frame=0x7f070049;
    public static final int success_text_test=0x7f07004a;
    public static final int success_tick=0x7f07004b;
    public static final int tabMode=0x7f07004c;
    public static final int title=0x7f07004d;
    public static final int title_text=0x7f07004e;
    public static final int top=0x7f07004f;
    public static final int txt_0=0x7f070050;
    public static final int txt_1=0x7f070051;
    public static final int txt_2=0x7f070052;
    public static final int txt_3=0x7f070053;
    public static final int txt_4=0x7f070054;
    public static final int txt_5=0x7f070055;
    public static final int txt_6=0x7f070056;
    public static final int txt_7=0x7f070057;
    public static final int under_text_test=0x7f070058;
    public static final int up=0x7f070059;
    public static final int useLogo=0x7f07005a;
    public static final int warning_cancel_test=0x7f07005b;
    public static final int warning_confirm_test=0x7f07005c;
    public static final int warning_frame=0x7f07005d;
    public static final int withText=0x7f07005e;
    public static final int wrap_content=0x7f07005f;
    public static final int x=0x7f070060;
    public static final int y=0x7f070061;
    public static final int z=0x7f070062;
  }
  public static final class integer {
    public static final int abc_max_action_buttons=0x7f080000;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f090000;
    public static final int abc_action_bar_up_container=0x7f090001;
    public static final int abc_action_bar_view_list_nav_layout=0x7f090002;
    public static final int abc_action_menu_item_layout=0x7f090003;
    public static final int abc_action_menu_layout=0x7f090004;
    public static final int abc_action_mode_bar=0x7f090005;
    public static final int abc_action_mode_close_item_material=0x7f090006;
    public static final int abc_activity_chooser_view=0x7f090007;
    public static final int abc_activity_chooser_view_include=0x7f090008;
    public static final int abc_activity_chooser_view_list_item=0x7f090009;
    public static final int abc_expanded_menu_layout=0x7f09000a;
    public static final int abc_list_menu_item_checkbox=0x7f09000b;
    public static final int abc_list_menu_item_icon=0x7f09000c;
    public static final int abc_list_menu_item_layout=0x7f09000d;
    public static final int abc_list_menu_item_radio=0x7f09000e;
    public static final int abc_popup_menu_item_layout=0x7f09000f;
    public static final int abc_screen_content_include=0x7f090010;
    public static final int abc_screen_simple=0x7f090011;
    public static final int abc_screen_simple_overlay_action_mode=0x7f090012;
    public static final int abc_screen_toolbar=0x7f090013;
    public static final int abc_search_dropdown_item_icons_2line=0x7f090014;
    public static final int abc_search_view=0x7f090015;
    public static final int abc_simple_dropdown_hint=0x7f090016;
    public static final int alert_dialog=0x7f090017;
    public static final int sample_activity=0x7f090018;
    public static final int support_simple_spinner_dropdown_item=0x7f090019;
  }
  public static final class string {
    public static final int LOADING=0x7f0a0000;
    public static final int abc_action_bar_home_description=0x7f0a0001;
    public static final int abc_action_bar_home_description_format=0x7f0a0002;
    public static final int abc_action_bar_home_subtitle_description_format=0x7f0a0003;
    public static final int abc_action_bar_up_description=0x7f0a0004;
    public static final int abc_action_menu_overflow_description=0x7f0a0005;
    public static final int abc_action_mode_done=0x7f0a0006;
    public static final int abc_activity_chooser_view_see_all=0x7f0a0007;
    public static final int abc_activitychooserview_choose_application=0x7f0a0008;
    public static final int abc_searchview_description_clear=0x7f0a0009;
    public static final int abc_searchview_description_query=0x7f0a000a;
    public static final int abc_searchview_description_search=0x7f0a000b;
    public static final int abc_searchview_description_submit=0x7f0a000c;
    public static final int abc_searchview_description_voice=0x7f0a000d;
    public static final int abc_shareactionprovider_share_with=0x7f0a000e;
    public static final int abc_shareactionprovider_share_with_application=0x7f0a000f;
    public static final int app_name=0x7f0a0010;
    public static final int dialog_cancel=0x7f0a0011;
    public static final int dialog_default_title=0x7f0a0012;
    public static final int dialog_ok=0x7f0a0013;
  }
  public static final class style {
    public static final int Base_TextAppearance_AppCompat=0x7f0b0000;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f0b0001;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f0b0002;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f0b0003;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f0b0004;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f0b0005;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f0b0006;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f0b0007;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f0b0008;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f0b0009;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f0b000a;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f0b000b;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f0b000c;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0b000d;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0b000e;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f0b000f;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f0b0010;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f0b0011;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f0b0012;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0b0013;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f0b0014;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f0b0015;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f0b0016;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f0b0017;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f0b0018;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f0b0019;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f0b001a;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0b001b;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0b001c;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0b001d;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0b001e;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0b001f;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0b0020;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0b0021;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f0b0022;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0b0023;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0b0024;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f0b0025;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0b0026;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0b0027;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0b0028;
    public static final int Base_Theme_AppCompat=0x7f0b0029;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f0b002a;
    public static final int Base_Theme_AppCompat_Dialog=0x7f0b002b;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f0b002c;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f0b002d;
    public static final int Base_Theme_AppCompat_Light=0x7f0b002e;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f0b002f;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f0b0030;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f0b0031;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f0b0032;
    public static final int Base_ThemeOverlay_AppCompat=0x7f0b0033;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f0b0034;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f0b0035;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0b0036;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f0b0037;
    public static final int Base_V11_Theme_AppCompat=0x7f0b0038;
    public static final int Base_V11_Theme_AppCompat_Dialog=0x7f0b0039;
    public static final int Base_V11_Theme_AppCompat_Light=0x7f0b003a;
    public static final int Base_V11_Theme_AppCompat_Light_Dialog=0x7f0b003b;
    public static final int Base_V14_Theme_AppCompat=0x7f0b003c;
    public static final int Base_V14_Theme_AppCompat_Dialog=0x7f0b003d;
    public static final int Base_V14_Theme_AppCompat_Light=0x7f0b003e;
    public static final int Base_V14_Theme_AppCompat_Light_Dialog=0x7f0b003f;
    public static final int Base_V21_Theme_AppCompat=0x7f0b0040;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f0b0041;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f0b0042;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f0b0043;
    public static final int Base_V7_Theme_AppCompat=0x7f0b0044;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f0b0045;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f0b0046;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f0b0047;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f0b0048;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f0b0049;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f0b004a;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f0b004b;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f0b004c;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f0b004d;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f0b004e;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f0b004f;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f0b0050;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f0b0051;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f0b0052;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f0b0053;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f0b0054;
    public static final int Base_Widget_AppCompat_EditText=0x7f0b0055;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f0b0056;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f0b0057;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f0b0058;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f0b0059;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0b005a;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f0b005b;
    public static final int Base_Widget_AppCompat_Light_ActivityChooserView=0x7f0b005c;
    public static final int Base_Widget_AppCompat_Light_AutoCompleteTextView=0x7f0b005d;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f0b005e;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0b005f;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f0b0060;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f0b0061;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f0b0062;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f0b0063;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f0b0064;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f0b0065;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f0b0066;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f0b0067;
    public static final int Base_Widget_AppCompat_SearchView=0x7f0b0068;
    public static final int Base_Widget_AppCompat_Spinner=0x7f0b0069;
    public static final int Base_Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f0b006a;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f0b006b;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f0b006c;
    public static final int Platform_AppCompat=0x7f0b006d;
    public static final int Platform_AppCompat_Dialog=0x7f0b006e;
    public static final int Platform_AppCompat_Light=0x7f0b006f;
    public static final int Platform_AppCompat_Light_Dialog=0x7f0b0070;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f0b0071;
    public static final int RtlOverlay_Widget_AppCompat_ActionButton_CloseMode=0x7f0b0072;
    public static final int RtlOverlay_Widget_AppCompat_ActionButton_Overflow=0x7f0b0073;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f0b0074;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f0b0075;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f0b0076;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f0b0077;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f0b0078;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f0b0079;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f0b007a;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f0b007b;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f0b007c;
    public static final int TextAppearance_AppCompat=0x7f0b007d;
    public static final int TextAppearance_AppCompat_Body1=0x7f0b007e;
    public static final int TextAppearance_AppCompat_Body2=0x7f0b007f;
    public static final int TextAppearance_AppCompat_Button=0x7f0b0080;
    public static final int TextAppearance_AppCompat_Caption=0x7f0b0081;
    public static final int TextAppearance_AppCompat_Display1=0x7f0b0082;
    public static final int TextAppearance_AppCompat_Display2=0x7f0b0083;
    public static final int TextAppearance_AppCompat_Display3=0x7f0b0084;
    public static final int TextAppearance_AppCompat_Display4=0x7f0b0085;
    public static final int TextAppearance_AppCompat_Headline=0x7f0b0086;
    public static final int TextAppearance_AppCompat_Inverse=0x7f0b0087;
    public static final int TextAppearance_AppCompat_Large=0x7f0b0088;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f0b0089;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f0b008a;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f0b008b;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0b008c;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0b008d;
    public static final int TextAppearance_AppCompat_Medium=0x7f0b008e;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f0b008f;
    public static final int TextAppearance_AppCompat_Menu=0x7f0b0090;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0b0091;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f0b0092;
    public static final int TextAppearance_AppCompat_Small=0x7f0b0093;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f0b0094;
    public static final int TextAppearance_AppCompat_Subhead=0x7f0b0095;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f0b0096;
    public static final int TextAppearance_AppCompat_Title=0x7f0b0097;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f0b0098;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0b0099;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0b009a;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0b009b;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0b009c;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0b009d;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0b009e;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f0b009f;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0b00a0;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f0b00a1;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f0b00a2;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0b00a3;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0b00a4;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f0b00a5;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0b00a6;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0b00a7;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0b00a8;
    public static final int Theme_AppCompat=0x7f0b00a9;
    public static final int Theme_AppCompat_CompactMenu=0x7f0b00aa;
    public static final int Theme_AppCompat_Dialog=0x7f0b00ab;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f0b00ac;
    public static final int Theme_AppCompat_Light=0x7f0b00ad;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f0b00ae;
    public static final int Theme_AppCompat_Light_Dialog=0x7f0b00af;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f0b00b0;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f0b00b1;
    public static final int Theme_AppCompat_NoActionBar=0x7f0b00b2;
    public static final int ThemeOverlay_AppCompat=0x7f0b00b3;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f0b00b4;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f0b00b5;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0b00b6;
    public static final int ThemeOverlay_AppCompat_Light=0x7f0b00b7;
    public static final int Widget_AppCompat_ActionBar=0x7f0b00b8;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f0b00b9;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f0b00ba;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f0b00bb;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f0b00bc;
    public static final int Widget_AppCompat_ActionButton=0x7f0b00bd;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f0b00be;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f0b00bf;
    public static final int Widget_AppCompat_ActionMode=0x7f0b00c0;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f0b00c1;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f0b00c2;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f0b00c3;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f0b00c4;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f0b00c5;
    public static final int Widget_AppCompat_EditText=0x7f0b00c6;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f0b00c7;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f0b00c8;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f0b00c9;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f0b00ca;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f0b00cb;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f0b00cc;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0b00cd;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f0b00ce;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f0b00cf;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f0b00d0;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f0b00d1;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f0b00d2;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f0b00d3;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f0b00d4;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f0b00d5;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f0b00d6;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f0b00d7;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f0b00d8;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f0b00d9;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0b00da;
    public static final int Widget_AppCompat_Light_SearchView=0x7f0b00db;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f0b00dc;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f0b00dd;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f0b00de;
    public static final int Widget_AppCompat_ListView_Menu=0x7f0b00df;
    public static final int Widget_AppCompat_PopupMenu=0x7f0b00e0;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f0b00e1;
    public static final int Widget_AppCompat_PopupWindow=0x7f0b00e2;
    public static final int Widget_AppCompat_ProgressBar=0x7f0b00e3;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f0b00e4;
    public static final int Widget_AppCompat_SearchView=0x7f0b00e5;
    public static final int Widget_AppCompat_Spinner=0x7f0b00e6;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f0b00e7;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f0b00e8;
    public static final int Widget_AppCompat_Toolbar=0x7f0b00e9;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f0b00ea;
    public static final int alert_dialog=0x7f0b00eb;
    public static final int dialog_blue_button=0x7f0b00ec;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background cn.pedant.SweetAlert.sample:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit cn.pedant.SweetAlert.sample:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked cn.pedant.SweetAlert.sample:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd cn.pedant.SweetAlert.sample:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft cn.pedant.SweetAlert.sample:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight cn.pedant.SweetAlert.sample:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart cn.pedant.SweetAlert.sample:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout cn.pedant.SweetAlert.sample:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions cn.pedant.SweetAlert.sample:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider cn.pedant.SweetAlert.sample:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation cn.pedant.SweetAlert.sample:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height cn.pedant.SweetAlert.sample:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll cn.pedant.SweetAlert.sample:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator cn.pedant.SweetAlert.sample:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout cn.pedant.SweetAlert.sample:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon cn.pedant.SweetAlert.sample:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle cn.pedant.SweetAlert.sample:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding cn.pedant.SweetAlert.sample:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo cn.pedant.SweetAlert.sample:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode cn.pedant.SweetAlert.sample:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme cn.pedant.SweetAlert.sample:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding cn.pedant.SweetAlert.sample:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle cn.pedant.SweetAlert.sample:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle cn.pedant.SweetAlert.sample:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle cn.pedant.SweetAlert.sample:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title cn.pedant.SweetAlert.sample:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle cn.pedant.SweetAlert.sample:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f020022, 0x7f020023, 0x7f020024, 0x7f02003a, 
      0x7f02003b, 0x7f02003c, 0x7f02003d, 0x7f02003e, 
      0x7f020040, 0x7f020041, 0x7f02004b, 0x7f020051, 
      0x7f020052, 0x7f020053, 0x7f020054, 0x7f020055, 
      0x7f020057, 0x7f02005a, 0x7f020063, 0x7f020069, 
      0x7f020074, 0x7f020077, 0x7f020078, 0x7f02008f, 
      0x7f020091, 0x7f0200a2, 0x7f0200a9
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=6;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=7;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:displayOptions
     */
    public static final int ActionBar_displayOptions=8;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:divider
     */
    public static final int ActionBar_divider=9;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:elevation
     */
    public static final int ActionBar_elevation=10;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:height
     */
    public static final int ActionBar_height=11;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=12;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=13;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:homeLayout
     */
    public static final int ActionBar_homeLayout=14;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:icon
     */
    public static final int ActionBar_icon=15;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=16;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:itemPadding
     */
    public static final int ActionBar_itemPadding=17;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:logo
     */
    public static final int ActionBar_logo=18;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:navigationMode
     */
    public static final int ActionBar_navigationMode=19;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:popupTheme
     */
    public static final int ActionBar_popupTheme=20;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=21;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=22;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:subtitle
     */
    public static final int ActionBar_subtitle=23;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:title
     */
    public static final int ActionBar_title=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=26;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background cn.pedant.SweetAlert.sample:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit cn.pedant.SweetAlert.sample:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout cn.pedant.SweetAlert.sample:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height cn.pedant.SweetAlert.sample:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle cn.pedant.SweetAlert.sample:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle cn.pedant.SweetAlert.sample:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f020022, 0x7f020023, 0x7f02002e, 0x7f020051, 
      0x7f020091, 0x7f0200a9
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable cn.pedant.SweetAlert.sample:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount cn.pedant.SweetAlert.sample:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f02004c, 0x7f020058
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a CompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompatTextView_textAllCaps cn.pedant.SweetAlert.sample:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #CompatTextView_textAllCaps
     */
    public static final int[] CompatTextView={
      0x7f020097
    };
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAllCaps
     */
    public static final int CompatTextView_textAllCaps=0;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barSize cn.pedant.SweetAlert.sample:barSize}</code></td><td>The size of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color cn.pedant.SweetAlert.sample:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize cn.pedant.SweetAlert.sample:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars cn.pedant.SweetAlert.sample:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_middleBarArrowSize cn.pedant.SweetAlert.sample:middleBarArrowSize}</code></td><td>The size of the middle bar when top and bottom bars merge into middle bar to form an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars cn.pedant.SweetAlert.sample:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness cn.pedant.SweetAlert.sample:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_topBottomBarArrowSize cn.pedant.SweetAlert.sample:topBottomBarArrowSize}</code></td><td>The size of the top and bottom bars when they merge to the middle bar to form an arrow</td></tr>
     * </table>
     * @see #DrawerArrowToggle_barSize
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_middleBarArrowSize
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     * @see #DrawerArrowToggle_topBottomBarArrowSize
     */
    public static final int[] DrawerArrowToggle={
      0x7f020026, 0x7f020030, 0x7f020045, 0x7f02004f, 
      0x7f020066, 0x7f020087, 0x7f0200a0, 0x7f0200ad
    };
    /**
     * <p>
     * @attr description
     * The size of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:barSize
     */
    public static final int DrawerArrowToggle_barSize=0;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:color
     */
    public static final int DrawerArrowToggle_color=1;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=2;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=3;
    /**
     * <p>
     * @attr description
     * The size of the middle bar when top and bottom bars merge into middle bar to form an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:middleBarArrowSize
     */
    public static final int DrawerArrowToggle_middleBarArrowSize=4;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=5;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:thickness
     */
    public static final int DrawerArrowToggle_thickness=6;
    /**
     * <p>
     * @attr description
     * The size of the top and bottom bars when they merge to the middle bar to form an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:topBottomBarArrowSize
     */
    public static final int DrawerArrowToggle_topBottomBarArrowSize=7;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider cn.pedant.SweetAlert.sample:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding cn.pedant.SweetAlert.sample:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild cn.pedant.SweetAlert.sample:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers cn.pedant.SweetAlert.sample:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f020041, 0x7f020043, 0x7f020065, 
      0x7f020085
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout cn.pedant.SweetAlert.sample:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass cn.pedant.SweetAlert.sample:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass cn.pedant.SweetAlert.sample:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction cn.pedant.SweetAlert.sample:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_showAsAction
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f02000d, 0x7f02001f, 0x7f020020, 
      0x7f020084
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:showAsAction
     */
    public static final int MenuItem_showAsAction=16;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing cn.pedant.SweetAlert.sample:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f020076
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor cn.pedant.SweetAlert.sample:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x7f02006a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=1;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor cn.pedant.SweetAlert.sample:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f02008d
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a ProgressWheel.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ProgressWheel_barColor cn.pedant.SweetAlert.sample:barColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_barSpinCycleTime cn.pedant.SweetAlert.sample:barSpinCycleTime}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_barWidth cn.pedant.SweetAlert.sample:barWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_circleRadius cn.pedant.SweetAlert.sample:circleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_fillRadius cn.pedant.SweetAlert.sample:fillRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_progressIndeterminate cn.pedant.SweetAlert.sample:progressIndeterminate}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_rimColor cn.pedant.SweetAlert.sample:rimColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_rimWidth cn.pedant.SweetAlert.sample:rimWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_spinSpeed cn.pedant.SweetAlert.sample:spinSpeed}</code></td><td></td></tr>
     * </table>
     * @see #ProgressWheel_barColor
     * @see #ProgressWheel_barSpinCycleTime
     * @see #ProgressWheel_barWidth
     * @see #ProgressWheel_circleRadius
     * @see #ProgressWheel_fillRadius
     * @see #ProgressWheel_progressIndeterminate
     * @see #ProgressWheel_rimColor
     * @see #ProgressWheel_rimWidth
     * @see #ProgressWheel_spinSpeed
     */
    public static final int[] ProgressWheel={
      0x7f020025, 0x7f020027, 0x7f020028, 0x7f02002c, 
      0x7f02004d, 0x7f020079, 0x7f02007d, 0x7f02007e, 
      0x7f020088
    };
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#barColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:barColor
     */
    public static final int ProgressWheel_barColor=0;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#barSpinCycleTime}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:barSpinCycleTime
     */
    public static final int ProgressWheel_barSpinCycleTime=1;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#barWidth}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:barWidth
     */
    public static final int ProgressWheel_barWidth=2;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#circleRadius}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:circleRadius
     */
    public static final int ProgressWheel_circleRadius=3;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#fillRadius}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:fillRadius
     */
    public static final int ProgressWheel_fillRadius=4;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#progressIndeterminate}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:progressIndeterminate
     */
    public static final int ProgressWheel_progressIndeterminate=5;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#rimColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:rimColor
     */
    public static final int ProgressWheel_rimColor=6;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#rimWidth}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:rimWidth
     */
    public static final int ProgressWheel_rimWidth=7;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#spinSpeed}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:spinSpeed
     */
    public static final int ProgressWheel_spinSpeed=8;
    /**
     * Attributes that can be used with a Rotate3dAnimation.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Rotate3dAnimation_fromDeg cn.pedant.SweetAlert.sample:fromDeg}</code></td><td></td></tr>
     * <tr><td><code>{@link #Rotate3dAnimation_pivotX cn.pedant.SweetAlert.sample:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Rotate3dAnimation_pivotY cn.pedant.SweetAlert.sample:pivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Rotate3dAnimation_rollType cn.pedant.SweetAlert.sample:rollType}</code></td><td></td></tr>
     * <tr><td><code>{@link #Rotate3dAnimation_toDeg cn.pedant.SweetAlert.sample:toDeg}</code></td><td></td></tr>
     * </table>
     * @see #Rotate3dAnimation_fromDeg
     * @see #Rotate3dAnimation_pivotX
     * @see #Rotate3dAnimation_pivotY
     * @see #Rotate3dAnimation_rollType
     * @see #Rotate3dAnimation_toDeg
     */
    public static final int[] Rotate3dAnimation={
      0x7f02004e, 0x7f020070, 0x7f020071, 0x7f02007f, 
      0x7f0200aa
    };
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#fromDeg}
     * attribute's value can be found in the {@link #Rotate3dAnimation} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:fromDeg
     */
    public static final int Rotate3dAnimation_fromDeg=0;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#pivotX}
     * attribute's value can be found in the {@link #Rotate3dAnimation} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name cn.pedant.SweetAlert.sample:pivotX
     */
    public static final int Rotate3dAnimation_pivotX=1;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#pivotY}
     * attribute's value can be found in the {@link #Rotate3dAnimation} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name cn.pedant.SweetAlert.sample:pivotY
     */
    public static final int Rotate3dAnimation_pivotY=2;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#rollType}
     * attribute's value can be found in the {@link #Rotate3dAnimation} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>x</td><td>0</td><td></td></tr>
     * <tr><td>y</td><td>1</td><td></td></tr>
     * <tr><td>z</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:rollType
     */
    public static final int Rotate3dAnimation_rollType=3;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#toDeg}
     * attribute's value can be found in the {@link #Rotate3dAnimation} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:toDeg
     */
    public static final int Rotate3dAnimation_toDeg=4;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon cn.pedant.SweetAlert.sample:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon cn.pedant.SweetAlert.sample:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon cn.pedant.SweetAlert.sample:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault cn.pedant.SweetAlert.sample:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout cn.pedant.SweetAlert.sample:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground cn.pedant.SweetAlert.sample:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint cn.pedant.SweetAlert.sample:queryHint}</code></td><td>An optional query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon cn.pedant.SweetAlert.sample:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground cn.pedant.SweetAlert.sample:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout cn.pedant.SweetAlert.sample:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon cn.pedant.SweetAlert.sample:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f02002d, 0x7f020039, 0x7f020050, 0x7f020056, 
      0x7f02005b, 0x7f02007b, 0x7f02007c, 0x7f020080, 
      0x7f02008e, 0x7f020092, 0x7f0200af
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:goIcon
     */
    public static final int SearchView_goIcon=6;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=7;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:layout
     */
    public static final int SearchView_layout=8;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:queryBackground
     */
    public static final int SearchView_queryBackground=9;
    /**
     * <p>
     * @attr description
     * An optional query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:queryHint
     */
    public static final int SearchView_queryHint=10;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:searchIcon
     */
    public static final int SearchView_searchIcon=11;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:submitBackground
     */
    public static final int SearchView_submitBackground=12;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=13;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:voiceIcon
     */
    public static final int SearchView_voiceIcon=14;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownSelector android:dropDownSelector}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_disableChildrenWhenDisabled cn.pedant.SweetAlert.sample:disableChildrenWhenDisabled}</code></td><td>Whether this spinner should mark child views as enabled/disabled when
     * the spinner itself is enabled/disabled.</td></tr>
     * <tr><td><code>{@link #Spinner_popupPromptView cn.pedant.SweetAlert.sample:popupPromptView}</code></td><td>Reference to a layout to use for displaying a prompt in the dropdown for
     * spinnerMode="dropdown".</td></tr>
     * <tr><td><code>{@link #Spinner_prompt cn.pedant.SweetAlert.sample:prompt}</code></td><td>The prompt to display when the spinner's dialog is shown.</td></tr>
     * <tr><td><code>{@link #Spinner_spinnerMode cn.pedant.SweetAlert.sample:spinnerMode}</code></td><td>Display mode for spinner options.</td></tr>
     * </table>
     * @see #Spinner_android_gravity
     * @see #Spinner_android_background
     * @see #Spinner_android_dropDownSelector
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_android_dropDownHorizontalOffset
     * @see #Spinner_android_dropDownVerticalOffset
     * @see #Spinner_disableChildrenWhenDisabled
     * @see #Spinner_popupPromptView
     * @see #Spinner_prompt
     * @see #Spinner_spinnerMode
     */
    public static final int[] Spinner={
      0x010100af, 0x010100d4, 0x01010175, 0x01010176, 
      0x01010262, 0x010102ac, 0x010102ad, 0x7f02003f, 
      0x7f020073, 0x7f02007a, 0x7f02008a
    };
    /**
     * <p>
     * @attr description
     * Gravity setting for positioning the currently selected item.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Spinner_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #Spinner} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int Spinner_android_background=1;
    /**
     * <p>
     * @attr description
     * List selector to use for spinnerMode="dropdown" display.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:dropDownSelector
     */
    public static final int Spinner_android_dropDownSelector=2;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=3;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=4;
    /**
     * <p>
     * @attr description
     * Horizontal offset from the spinner widget for positioning the dropdown
     * in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int Spinner_android_dropDownHorizontalOffset=5;
    /**
     * <p>
     * @attr description
     * Vertical offset from the spinner widget for positioning the dropdown in
     * spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int Spinner_android_dropDownVerticalOffset=6;
    /**
     * <p>
     * @attr description
     * Whether this spinner should mark child views as enabled/disabled when
     * the spinner itself is enabled/disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:disableChildrenWhenDisabled
     */
    public static final int Spinner_disableChildrenWhenDisabled=7;
    /**
     * <p>
     * @attr description
     * Reference to a layout to use for displaying a prompt in the dropdown for
     * spinnerMode="dropdown". This layout must contain a TextView with the id
     * {@code @android:id/text1} to be populated with the prompt text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:popupPromptView
     */
    public static final int Spinner_popupPromptView=8;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:prompt
     */
    public static final int Spinner_prompt=9;
    /**
     * <p>
     * @attr description
     * Display mode for spinner options.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dialog</td><td>0</td><td>Spinner options will be presented to the user as a dialog window.</td></tr>
     * <tr><td>dropdown</td><td>1</td><td>Spinner options will be presented to the user as an inline dropdown
     * anchored to the spinner widget itself.</td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:spinnerMode
     */
    public static final int Spinner_spinnerMode=10;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText cn.pedant.SweetAlert.sample:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack cn.pedant.SweetAlert.sample:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth cn.pedant.SweetAlert.sample:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding cn.pedant.SweetAlert.sample:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance cn.pedant.SweetAlert.sample:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding cn.pedant.SweetAlert.sample:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track cn.pedant.SweetAlert.sample:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_track
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f020086, 
      0x7f02008c, 0x7f020093, 0x7f020094, 0x7f020096, 
      0x7f0200a1, 0x7f0200ae
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:track
     */
    public static final int SwitchCompat_track=9;
    /**
     * Attributes that can be used with a Theme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Theme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_actionBarDivider cn.pedant.SweetAlert.sample:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #Theme_actionBarItemBackground cn.pedant.SweetAlert.sample:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #Theme_actionBarPopupTheme cn.pedant.SweetAlert.sample:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Theme_actionBarSize cn.pedant.SweetAlert.sample:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #Theme_actionBarSplitStyle cn.pedant.SweetAlert.sample:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #Theme_actionBarStyle cn.pedant.SweetAlert.sample:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #Theme_actionBarTabBarStyle cn.pedant.SweetAlert.sample:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_actionBarTabStyle cn.pedant.SweetAlert.sample:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #Theme_actionBarTabTextStyle cn.pedant.SweetAlert.sample:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_actionBarTheme cn.pedant.SweetAlert.sample:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #Theme_actionBarWidgetTheme cn.pedant.SweetAlert.sample:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #Theme_actionButtonStyle cn.pedant.SweetAlert.sample:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #Theme_actionDropDownStyle cn.pedant.SweetAlert.sample:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #Theme_actionMenuTextAppearance cn.pedant.SweetAlert.sample:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #Theme_actionMenuTextColor cn.pedant.SweetAlert.sample:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #Theme_actionModeBackground cn.pedant.SweetAlert.sample:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #Theme_actionModeCloseButtonStyle cn.pedant.SweetAlert.sample:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_actionModeCloseDrawable cn.pedant.SweetAlert.sample:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #Theme_actionModeCopyDrawable cn.pedant.SweetAlert.sample:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #Theme_actionModeCutDrawable cn.pedant.SweetAlert.sample:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #Theme_actionModeFindDrawable cn.pedant.SweetAlert.sample:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #Theme_actionModePasteDrawable cn.pedant.SweetAlert.sample:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #Theme_actionModePopupWindowStyle cn.pedant.SweetAlert.sample:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #Theme_actionModeSelectAllDrawable cn.pedant.SweetAlert.sample:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #Theme_actionModeShareDrawable cn.pedant.SweetAlert.sample:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #Theme_actionModeSplitBackground cn.pedant.SweetAlert.sample:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #Theme_actionModeStyle cn.pedant.SweetAlert.sample:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_actionModeWebSearchDrawable cn.pedant.SweetAlert.sample:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #Theme_actionOverflowButtonStyle cn.pedant.SweetAlert.sample:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_actionOverflowMenuStyle cn.pedant.SweetAlert.sample:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_activityChooserViewStyle cn.pedant.SweetAlert.sample:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #Theme_buttonBarButtonStyle cn.pedant.SweetAlert.sample:buttonBarButtonStyle}</code></td><td>A style that may be applied to Buttons placed within a
     * LinearLayout with the style buttonBarStyle to form a button bar.</td></tr>
     * <tr><td><code>{@link #Theme_buttonBarStyle cn.pedant.SweetAlert.sample:buttonBarStyle}</code></td><td>A style that may be applied to horizontal LinearLayouts
     * to form a button bar.</td></tr>
     * <tr><td><code>{@link #Theme_colorAccent cn.pedant.SweetAlert.sample:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #Theme_colorButtonNormal cn.pedant.SweetAlert.sample:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #Theme_colorControlActivated cn.pedant.SweetAlert.sample:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #Theme_colorControlHighlight cn.pedant.SweetAlert.sample:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #Theme_colorControlNormal cn.pedant.SweetAlert.sample:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #Theme_colorPrimary cn.pedant.SweetAlert.sample:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #Theme_colorPrimaryDark cn.pedant.SweetAlert.sample:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #Theme_colorSwitchThumbNormal cn.pedant.SweetAlert.sample:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #Theme_dividerHorizontal cn.pedant.SweetAlert.sample:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #Theme_dividerVertical cn.pedant.SweetAlert.sample:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #Theme_dropDownListViewStyle cn.pedant.SweetAlert.sample:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #Theme_dropdownListPreferredItemHeight cn.pedant.SweetAlert.sample:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #Theme_editTextBackground cn.pedant.SweetAlert.sample:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #Theme_editTextColor cn.pedant.SweetAlert.sample:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #Theme_homeAsUpIndicator cn.pedant.SweetAlert.sample:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #Theme_listChoiceBackgroundIndicator cn.pedant.SweetAlert.sample:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #Theme_listPopupWindowStyle cn.pedant.SweetAlert.sample:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_listPreferredItemHeight cn.pedant.SweetAlert.sample:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #Theme_listPreferredItemHeightLarge cn.pedant.SweetAlert.sample:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #Theme_listPreferredItemHeightSmall cn.pedant.SweetAlert.sample:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #Theme_listPreferredItemPaddingLeft cn.pedant.SweetAlert.sample:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #Theme_listPreferredItemPaddingRight cn.pedant.SweetAlert.sample:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #Theme_panelBackground cn.pedant.SweetAlert.sample:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #Theme_panelMenuListTheme cn.pedant.SweetAlert.sample:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #Theme_panelMenuListWidth cn.pedant.SweetAlert.sample:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #Theme_popupMenuStyle cn.pedant.SweetAlert.sample:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #Theme_popupWindowStyle cn.pedant.SweetAlert.sample:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #Theme_searchViewStyle cn.pedant.SweetAlert.sample:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #Theme_selectableItemBackground cn.pedant.SweetAlert.sample:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #Theme_selectableItemBackgroundBorderless cn.pedant.SweetAlert.sample:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #Theme_spinnerDropDownItemStyle cn.pedant.SweetAlert.sample:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #Theme_spinnerStyle cn.pedant.SweetAlert.sample:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #Theme_switchStyle cn.pedant.SweetAlert.sample:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #Theme_textAppearanceLargePopupMenu cn.pedant.SweetAlert.sample:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #Theme_textAppearanceListItem cn.pedant.SweetAlert.sample:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #Theme_textAppearanceListItemSmall cn.pedant.SweetAlert.sample:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #Theme_textAppearanceSearchResultSubtitle cn.pedant.SweetAlert.sample:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #Theme_textAppearanceSearchResultTitle cn.pedant.SweetAlert.sample:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #Theme_textAppearanceSmallPopupMenu cn.pedant.SweetAlert.sample:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #Theme_textColorSearchUrl cn.pedant.SweetAlert.sample:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #Theme_toolbarNavigationButtonStyle cn.pedant.SweetAlert.sample:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #Theme_toolbarStyle cn.pedant.SweetAlert.sample:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #Theme_windowActionBar cn.pedant.SweetAlert.sample:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #Theme_windowActionBarOverlay cn.pedant.SweetAlert.sample:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #Theme_windowActionModeOverlay cn.pedant.SweetAlert.sample:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #Theme_windowFixedHeightMajor cn.pedant.SweetAlert.sample:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #Theme_windowFixedHeightMinor cn.pedant.SweetAlert.sample:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #Theme_windowFixedWidthMajor cn.pedant.SweetAlert.sample:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #Theme_windowFixedWidthMinor cn.pedant.SweetAlert.sample:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * </table>
     * @see #Theme_android_windowIsFloating
     * @see #Theme_actionBarDivider
     * @see #Theme_actionBarItemBackground
     * @see #Theme_actionBarPopupTheme
     * @see #Theme_actionBarSize
     * @see #Theme_actionBarSplitStyle
     * @see #Theme_actionBarStyle
     * @see #Theme_actionBarTabBarStyle
     * @see #Theme_actionBarTabStyle
     * @see #Theme_actionBarTabTextStyle
     * @see #Theme_actionBarTheme
     * @see #Theme_actionBarWidgetTheme
     * @see #Theme_actionButtonStyle
     * @see #Theme_actionDropDownStyle
     * @see #Theme_actionMenuTextAppearance
     * @see #Theme_actionMenuTextColor
     * @see #Theme_actionModeBackground
     * @see #Theme_actionModeCloseButtonStyle
     * @see #Theme_actionModeCloseDrawable
     * @see #Theme_actionModeCopyDrawable
     * @see #Theme_actionModeCutDrawable
     * @see #Theme_actionModeFindDrawable
     * @see #Theme_actionModePasteDrawable
     * @see #Theme_actionModePopupWindowStyle
     * @see #Theme_actionModeSelectAllDrawable
     * @see #Theme_actionModeShareDrawable
     * @see #Theme_actionModeSplitBackground
     * @see #Theme_actionModeStyle
     * @see #Theme_actionModeWebSearchDrawable
     * @see #Theme_actionOverflowButtonStyle
     * @see #Theme_actionOverflowMenuStyle
     * @see #Theme_activityChooserViewStyle
     * @see #Theme_buttonBarButtonStyle
     * @see #Theme_buttonBarStyle
     * @see #Theme_colorAccent
     * @see #Theme_colorButtonNormal
     * @see #Theme_colorControlActivated
     * @see #Theme_colorControlHighlight
     * @see #Theme_colorControlNormal
     * @see #Theme_colorPrimary
     * @see #Theme_colorPrimaryDark
     * @see #Theme_colorSwitchThumbNormal
     * @see #Theme_dividerHorizontal
     * @see #Theme_dividerVertical
     * @see #Theme_dropDownListViewStyle
     * @see #Theme_dropdownListPreferredItemHeight
     * @see #Theme_editTextBackground
     * @see #Theme_editTextColor
     * @see #Theme_homeAsUpIndicator
     * @see #Theme_listChoiceBackgroundIndicator
     * @see #Theme_listPopupWindowStyle
     * @see #Theme_listPreferredItemHeight
     * @see #Theme_listPreferredItemHeightLarge
     * @see #Theme_listPreferredItemHeightSmall
     * @see #Theme_listPreferredItemPaddingLeft
     * @see #Theme_listPreferredItemPaddingRight
     * @see #Theme_panelBackground
     * @see #Theme_panelMenuListTheme
     * @see #Theme_panelMenuListWidth
     * @see #Theme_popupMenuStyle
     * @see #Theme_popupWindowStyle
     * @see #Theme_searchViewStyle
     * @see #Theme_selectableItemBackground
     * @see #Theme_selectableItemBackgroundBorderless
     * @see #Theme_spinnerDropDownItemStyle
     * @see #Theme_spinnerStyle
     * @see #Theme_switchStyle
     * @see #Theme_textAppearanceLargePopupMenu
     * @see #Theme_textAppearanceListItem
     * @see #Theme_textAppearanceListItemSmall
     * @see #Theme_textAppearanceSearchResultSubtitle
     * @see #Theme_textAppearanceSearchResultTitle
     * @see #Theme_textAppearanceSmallPopupMenu
     * @see #Theme_textColorSearchUrl
     * @see #Theme_toolbarNavigationButtonStyle
     * @see #Theme_toolbarStyle
     * @see #Theme_windowActionBar
     * @see #Theme_windowActionBarOverlay
     * @see #Theme_windowActionModeOverlay
     * @see #Theme_windowFixedHeightMajor
     * @see #Theme_windowFixedHeightMinor
     * @see #Theme_windowFixedWidthMajor
     * @see #Theme_windowFixedWidthMinor
     */
    public static final int[] Theme={
      0x01010057, 0x7f020000, 0x7f020001, 0x7f020002, 
      0x7f020003, 0x7f020004, 0x7f020005, 0x7f020006, 
      0x7f020007, 0x7f020008, 0x7f020009, 0x7f02000a, 
      0x7f02000b, 0x7f02000c, 0x7f02000e, 0x7f02000f, 
      0x7f020010, 0x7f020011, 0x7f020012, 0x7f020013, 
      0x7f020014, 0x7f020015, 0x7f020016, 0x7f020017, 
      0x7f020018, 0x7f020019, 0x7f02001a, 0x7f02001b, 
      0x7f02001c, 0x7f02001d, 0x7f02001e, 0x7f020021, 
      0x7f020029, 0x7f02002a, 0x7f020031, 0x7f020032, 
      0x7f020033, 0x7f020034, 0x7f020035, 0x7f020036, 
      0x7f020037, 0x7f020038, 0x7f020042, 0x7f020044, 
      0x7f020047, 0x7f020048, 0x7f020049, 0x7f02004a, 
      0x7f020053, 0x7f02005c, 0x7f02005d, 0x7f02005e, 
      0x7f02005f, 0x7f020060, 0x7f020061, 0x7f020062, 
      0x7f02006d, 0x7f02006e, 0x7f02006f, 0x7f020072, 
      0x7f020075, 0x7f020081, 0x7f020082, 0x7f020083, 
      0x7f020089, 0x7f02008b, 0x7f020095, 0x7f020098, 
      0x7f020099, 0x7f02009a, 0x7f02009b, 0x7f02009c, 
      0x7f02009d, 0x7f02009e, 0x7f0200ab, 0x7f0200ac, 
      0x7f0200b0, 0x7f0200b1, 0x7f0200b2, 0x7f0200b3, 
      0x7f0200b4, 0x7f0200b5, 0x7f0200b6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int Theme_android_windowIsFloating=0;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarDivider
     */
    public static final int Theme_actionBarDivider=1;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarItemBackground
     */
    public static final int Theme_actionBarItemBackground=2;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarPopupTheme
     */
    public static final int Theme_actionBarPopupTheme=3;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarSize
     */
    public static final int Theme_actionBarSize=4;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarSplitStyle
     */
    public static final int Theme_actionBarSplitStyle=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarStyle
     */
    public static final int Theme_actionBarStyle=6;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarTabBarStyle
     */
    public static final int Theme_actionBarTabBarStyle=7;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarTabStyle
     */
    public static final int Theme_actionBarTabStyle=8;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarTabTextStyle
     */
    public static final int Theme_actionBarTabTextStyle=9;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarTheme
     */
    public static final int Theme_actionBarTheme=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionBarWidgetTheme
     */
    public static final int Theme_actionBarWidgetTheme=11;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionButtonStyle
     */
    public static final int Theme_actionButtonStyle=12;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionDropDownStyle
     */
    public static final int Theme_actionDropDownStyle=13;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionMenuTextAppearance
     */
    public static final int Theme_actionMenuTextAppearance=14;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionMenuTextColor
     */
    public static final int Theme_actionMenuTextColor=15;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeBackground
     */
    public static final int Theme_actionModeBackground=16;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeCloseButtonStyle
     */
    public static final int Theme_actionModeCloseButtonStyle=17;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeCloseDrawable
     */
    public static final int Theme_actionModeCloseDrawable=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeCopyDrawable
     */
    public static final int Theme_actionModeCopyDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeCutDrawable
     */
    public static final int Theme_actionModeCutDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeFindDrawable
     */
    public static final int Theme_actionModeFindDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModePasteDrawable
     */
    public static final int Theme_actionModePasteDrawable=22;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModePopupWindowStyle
     */
    public static final int Theme_actionModePopupWindowStyle=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeSelectAllDrawable
     */
    public static final int Theme_actionModeSelectAllDrawable=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeShareDrawable
     */
    public static final int Theme_actionModeShareDrawable=25;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeSplitBackground
     */
    public static final int Theme_actionModeSplitBackground=26;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeStyle
     */
    public static final int Theme_actionModeStyle=27;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionModeWebSearchDrawable
     */
    public static final int Theme_actionModeWebSearchDrawable=28;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionOverflowButtonStyle
     */
    public static final int Theme_actionOverflowButtonStyle=29;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:actionOverflowMenuStyle
     */
    public static final int Theme_actionOverflowMenuStyle=30;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:activityChooserViewStyle
     */
    public static final int Theme_activityChooserViewStyle=31;
    /**
     * <p>
     * @attr description
     * A style that may be applied to Buttons placed within a
     * LinearLayout with the style buttonBarStyle to form a button bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:buttonBarButtonStyle
     */
    public static final int Theme_buttonBarButtonStyle=32;
    /**
     * <p>
     * @attr description
     * A style that may be applied to horizontal LinearLayouts
     * to form a button bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:buttonBarStyle
     */
    public static final int Theme_buttonBarStyle=33;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorAccent
     */
    public static final int Theme_colorAccent=34;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorButtonNormal
     */
    public static final int Theme_colorButtonNormal=35;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorControlActivated
     */
    public static final int Theme_colorControlActivated=36;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorControlHighlight
     */
    public static final int Theme_colorControlHighlight=37;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorControlNormal
     */
    public static final int Theme_colorControlNormal=38;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorPrimary
     */
    public static final int Theme_colorPrimary=39;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorPrimaryDark
     */
    public static final int Theme_colorPrimaryDark=40;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:colorSwitchThumbNormal
     */
    public static final int Theme_colorSwitchThumbNormal=41;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:dividerHorizontal
     */
    public static final int Theme_dividerHorizontal=42;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:dividerVertical
     */
    public static final int Theme_dividerVertical=43;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:dropDownListViewStyle
     */
    public static final int Theme_dropDownListViewStyle=44;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:dropdownListPreferredItemHeight
     */
    public static final int Theme_dropdownListPreferredItemHeight=45;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:editTextBackground
     */
    public static final int Theme_editTextBackground=46;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:editTextColor
     */
    public static final int Theme_editTextColor=47;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:homeAsUpIndicator
     */
    public static final int Theme_homeAsUpIndicator=48;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:listChoiceBackgroundIndicator
     */
    public static final int Theme_listChoiceBackgroundIndicator=49;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:listPopupWindowStyle
     */
    public static final int Theme_listPopupWindowStyle=50;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:listPreferredItemHeight
     */
    public static final int Theme_listPreferredItemHeight=51;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:listPreferredItemHeightLarge
     */
    public static final int Theme_listPreferredItemHeightLarge=52;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:listPreferredItemHeightSmall
     */
    public static final int Theme_listPreferredItemHeightSmall=53;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:listPreferredItemPaddingLeft
     */
    public static final int Theme_listPreferredItemPaddingLeft=54;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:listPreferredItemPaddingRight
     */
    public static final int Theme_listPreferredItemPaddingRight=55;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:panelBackground
     */
    public static final int Theme_panelBackground=56;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:panelMenuListTheme
     */
    public static final int Theme_panelMenuListTheme=57;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:panelMenuListWidth
     */
    public static final int Theme_panelMenuListWidth=58;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:popupMenuStyle
     */
    public static final int Theme_popupMenuStyle=59;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:popupWindowStyle
     */
    public static final int Theme_popupWindowStyle=60;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:searchViewStyle
     */
    public static final int Theme_searchViewStyle=61;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:selectableItemBackground
     */
    public static final int Theme_selectableItemBackground=62;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:selectableItemBackgroundBorderless
     */
    public static final int Theme_selectableItemBackgroundBorderless=63;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:spinnerDropDownItemStyle
     */
    public static final int Theme_spinnerDropDownItemStyle=64;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:spinnerStyle
     */
    public static final int Theme_spinnerStyle=65;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:switchStyle
     */
    public static final int Theme_switchStyle=66;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAppearanceLargePopupMenu
     */
    public static final int Theme_textAppearanceLargePopupMenu=67;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAppearanceListItem
     */
    public static final int Theme_textAppearanceListItem=68;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAppearanceListItemSmall
     */
    public static final int Theme_textAppearanceListItemSmall=69;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAppearanceSearchResultSubtitle
     */
    public static final int Theme_textAppearanceSearchResultSubtitle=70;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAppearanceSearchResultTitle
     */
    public static final int Theme_textAppearanceSearchResultTitle=71;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textAppearanceSmallPopupMenu
     */
    public static final int Theme_textAppearanceSmallPopupMenu=72;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:textColorSearchUrl
     */
    public static final int Theme_textColorSearchUrl=73;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:toolbarNavigationButtonStyle
     */
    public static final int Theme_toolbarNavigationButtonStyle=74;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:toolbarStyle
     */
    public static final int Theme_toolbarStyle=75;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:windowActionBar
     */
    public static final int Theme_windowActionBar=76;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:windowActionBarOverlay
     */
    public static final int Theme_windowActionBarOverlay=77;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:windowActionModeOverlay
     */
    public static final int Theme_windowActionModeOverlay=78;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name cn.pedant.SweetAlert.sample:windowFixedHeightMajor
     */
    public static final int Theme_windowFixedHeightMajor=79;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name cn.pedant.SweetAlert.sample:windowFixedHeightMinor
     */
    public static final int Theme_windowFixedHeightMinor=80;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name cn.pedant.SweetAlert.sample:windowFixedWidthMajor
     */
    public static final int Theme_windowFixedWidthMajor=81;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name cn.pedant.SweetAlert.sample:windowFixedWidthMinor
     */
    public static final int Theme_windowFixedWidthMinor=82;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity cn.pedant.SweetAlert.sample:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon cn.pedant.SweetAlert.sample:collapseIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd cn.pedant.SweetAlert.sample:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft cn.pedant.SweetAlert.sample:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight cn.pedant.SweetAlert.sample:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart cn.pedant.SweetAlert.sample:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight cn.pedant.SweetAlert.sample:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription cn.pedant.SweetAlert.sample:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon cn.pedant.SweetAlert.sample:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme cn.pedant.SweetAlert.sample:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle cn.pedant.SweetAlert.sample:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance cn.pedant.SweetAlert.sample:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_theme cn.pedant.SweetAlert.sample:theme}</code></td><td>Specifies a theme override for a view.</td></tr>
     * <tr><td><code>{@link #Toolbar_title cn.pedant.SweetAlert.sample:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom cn.pedant.SweetAlert.sample:titleMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd cn.pedant.SweetAlert.sample:titleMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart cn.pedant.SweetAlert.sample:titleMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop cn.pedant.SweetAlert.sample:titleMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins cn.pedant.SweetAlert.sample:titleMargins}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance cn.pedant.SweetAlert.sample:titleTextAppearance}</code></td><td></td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_theme
     * @see #Toolbar_title
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     */
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f02002b, 0x7f02002f, 
      0x7f02003a, 0x7f02003b, 0x7f02003c, 0x7f02003d, 
      0x7f020064, 0x7f020067, 0x7f020068, 0x7f020074, 
      0x7f02008f, 0x7f020090, 0x7f02009f, 0x7f0200a2, 
      0x7f0200a3, 0x7f0200a4, 0x7f0200a5, 0x7f0200a6, 
      0x7f0200a7, 0x7f0200a8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Allows us to read in the minHeight attr pre-v16
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name cn.pedant.SweetAlert.sample:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#collapseIcon}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:collapseIcon
     */
    public static final int Toolbar_collapseIcon=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=7;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=8;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=9;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:navigationIcon
     */
    public static final int Toolbar_navigationIcon=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:popupTheme
     */
    public static final int Toolbar_popupTheme=11;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:subtitle
     */
    public static final int Toolbar_subtitle=12;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=13;
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource. During XML inflation, any child views under the
     * view with a theme override will inherit the themed context.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:theme
     */
    public static final int Toolbar_theme=14;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name cn.pedant.SweetAlert.sample:title
     */
    public static final int Toolbar_title=15;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#titleMarginBottom}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=16;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#titleMarginEnd}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=17;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#titleMarginStart}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=18;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#titleMarginTop}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=19;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#titleMargins}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:titleMargins
     */
    public static final int Toolbar_titleMargins=20;
    /**
     * <p>This symbol is the offset where the {@link cn.pedant.SweetAlert.sample.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name cn.pedant.SweetAlert.sample:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=21;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd cn.pedant.SweetAlert.sample:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart cn.pedant.SweetAlert.sample:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * </table>
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     */
    public static final int[] View={
      0x010100da, 0x7f02006b, 0x7f02006c
    };
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=0;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:paddingEnd
     */
    public static final int View_paddingEnd=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name cn.pedant.SweetAlert.sample:paddingStart
     */
    public static final int View_paddingStart=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
}